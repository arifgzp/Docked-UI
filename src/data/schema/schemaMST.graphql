enum Gender {
    FEMALE
    MALE
    OTHERS
}


enum UserRole {
    DOCTOR
    RESIDENTS
    ADMIN
}

enum UserStatus {
    REGISTERED
    RESET_PASSWORD_REQUIRED
    VERIFICATION_REQUIRED
    WIZARD_PENDING
}

# ... EnumTypeSeperator

type User @secret(field: "password") {
    id: ID!
    newUserVerificationCode: String @search(by:[exact]) @dgraph(pred:"newUserVerificationCode")
    userName: String @search(by:[exact]) @dgraph(pred:"userName") @id
    userStatus: UserStatus @search @dgraph(pred:"userStatus")
    resetPasswordCode: String @search(by:[exact]) @dgraph(pred:"resetPasswordCode")
    name: String @search(by:[term]) @dgraph(pred:"name")
    gender: Gender @search @dgraph(pred:"gender")
    role: UserRole @search(by:[exact]) @dgraph(pred:"role")
    lastName: String @search(by:[term]) @dgraph(pred:"lastName")
    createdOn: DateTime @search @dgraph(pred:"createdOn")
    updatedOn: DateTime @search @dgraph(pred:"updatedOn")
    countryCode: String @search @dgraph(pred:"countryCode")
    phoneNumber: String @search @dgraph(pred:"phoneNumber")
    combinePhoneNumber: String @search @dgraph(pred:"combinePhoneNumber")
    dateOfBirth: DateTime @search @dgraph(pred:"dateOfBirth")
    active: Boolean @dgraph(pred:"active")
    broadSpecialty: String @search @dgraph(pred:"broadSpecialty")
    superSpecialty: String @search @dgraph(pred:"superSpecialty")
    subSpecialty: String @search @dgraph(pred:"subSpecialty")
    designation: String @search @dgraph(pred:"designation")
    designationOthers: String @search @dgraph(pred:"designationOthers")
    workPlace: String @search @dgraph(pred:"workPlace")
    city: String @search(by:[term]) @dgraph(pred:"city")
    medicalCouncilName: String @search(by:[term]) @dgraph(pred:"medicalCouncilName")
    yearOfRegistration: DateTime @dgraph(pred:"yearOfRegistration")
    medicalRegistrationNumber: String @search(by:[term]) @dgraph(pred:"medicalRegistrationNumber")
    verifiedMedicalRegistrationNumber: Boolean @dgraph(pred:"verifiedMedicalRegistrationNumber")
    targetedCaseLogNumber: Int @dgraph(pred:"targetedCaseLogNumber")
    anaesthesiaCaseLog: [AnaesthesiaCaseLog] @dgraph(pred:"anaesthesiaCaseLog")
    anaesthesiaChronicPainLog: [AnaesthesiaChronicPainLog] @dgraph(pred:"anaesthesiaChronicPainLog")
    anaesthesiaCriticalCareCaseLog: [AnaesthesiaCriticalCareCaseLog] @dgraph(pred:"anaesthesiaCriticalCareCaseLog")
    orthodonticsClinicalCaseLog: [OrthodonticsClinicalCaseLog] @dgraph(pred:"orthodonticsClinicalCaseLog")
    orthodonticsPreClinical: [OrthodonticsPreClinical] @dgraph(pred:"orthodonticsPreClinical")
    orthopaedicsCaseLog: [OrthopaedicsCaseLog] @dgraph(pred:"orthopaedicsCaseLog")
    orthopaedicsProcedureLog: [OrthopaedicsProcedureLog] @dgraph(pred:"orthopaedicsProcedureLog")
    oralMedicineAndRadiologyCaseLog: [OralMedicineAndRadiologyCaseLog] @dgraph(pred:"oralMedicineAndRadiologyCaseLog")
    oralRadiology: [OralRadiology] @dgraph(pred:"oralRadiology")
    academicLog: [AcademicLog] @dgraph(pred:"academicLog")
    publicationLog: [PublicationLog] @dgraph(pred:"publicationLog")
    adminWorkLog: [AdminWorkLog] @dgraph(pred:"adminWorkLog")
    thesisLog: [ThesisLog] @dgraph(pred:"thesisLog")
    customLog: [CustomLog] @dgraph(pred:"customLog")
    thesisCases: [ThesisCase] @dgraph(pred:"thesisCases")
    customCases: [CustomCase] @dgraph(pred:"customCases")
    logProfile: LogProfile @dgraph(pred:"logProfile")
    imagePath: String @dgraph(pred:"imagePath")
    userFeedback: [UserFeedback] @dgraph(pred:"userFeedback")
}

type UserFeedback{
    id: ID!
    createdOn: DateTime @search @dgraph(pred:"createdOn")
    updatedOn: DateTime @search @dgraph(pred:"updatedOn")
    title: String @search @dgraph(pred:"title")
    description: String @search @dgraph(pred:"description")
    userEmail: String @search @dgraph(pred:"userEmail")
}

type ThesisLog{
    id: ID!
    createdOn: DateTime @search @dgraph(pred:"createdOn")
    updatedOn: DateTime @search @dgraph(pred:"updatedOn")
    thesisName: String @search @dgraph(pred:"thesisName")
    formLabels: [FormLabels] @dgraph(pred:"formLabels")
}

type CustomLog{
    id: ID!
    createdOn: DateTime @search @dgraph(pred:"createdOn")
    updatedOn: DateTime @search @dgraph(pred:"updatedOn")
    customName: String @search @dgraph(pred:"customName")
    formLabels: [FormLabels] @dgraph(pred:"formLabels")
}

type FormLabels{
    id: ID!
    createdOn: DateTime @search @dgraph(pred:"createdOn")
    updatedOn: DateTime @search @dgraph(pred:"updatedOn")
    label: String @search @dgraph(pred:"label")
}

type Fields{
    id: ID!
    createdOn: DateTime @search @dgraph(pred:"createdOn")
    updatedOn: DateTime @search @dgraph(pred:"updatedOn")
    label: String @search @dgraph(pred:"label")
    value: String @search @dgraph(pred:"value")
}

type ThesisCase{
    id: ID!
    caseName: String @search @dgraph(pred:"caseName")
    createdOn: DateTime @search @dgraph(pred:"createdOn")
    updatedOn: DateTime @search @dgraph(pred:"updatedOn")
    fields: [Fields] @dgraph(pred:"fields")
}

type CustomCase{
    id: ID!
    caseName: String @search @dgraph(pred:"caseName")
    createdOn: DateTime @search @dgraph(pred:"createdOn")
    updatedOn: DateTime @search @dgraph(pred:"updatedOn")
    fields: [Fields] @dgraph(pred:"fields")
    customLogIdReference: String @search @dgraph(pred:"customLogIdReference")
}

type AnaesthesiaCaseLog  {
    id: ID!
    createdOn: DateTime @search @dgraph(pred:"createdOn")
    updatedOn: DateTime @search @dgraph(pred:"updatedOn")
    date: DateTime @search @dgraph(pred:"date")
    rotation: String @search(by:[term]) @dgraph(pred:"rotation")
    hospital: String @search(by:[term]) @dgraph(pred:"hospital")
    faculty: String @dgraph(pred:"faculty")
    complete: Boolean @dgraph(pred:"complete")
    patientAge: String @dgraph(pred:"patientAge")
    patientSex: String @dgraph(pred:"patientSex")
    weight: String @dgraph(pred:"weight")
    height: String @dgraph(pred:"height")
    diagnosis: String @dgraph(pred:"diagnosis")
    surgicalProcedure: String @dgraph(pred:"surgicalProcedure")
    speciality : String @dgraph(pred:"speciality")
    asaGrade : String @dgraph(pred:"asaGrade")
    typeOfSurgery : String @dgraph(pred:"typeOfSurgery")
    npo : String @dgraph(pred:"npo")
    conduct: String @dgraph(pred:"conduct")
    comorbidity : [String] @dgraph(pred:"comorbidity")
    examination : [String] @dgraph(pred:"examination")
    laboratoryFindings : [String] @dgraph(pred:"laboratoryFindings")
    medicalRegistrationNumber: String @search(by:[term])@dgraph(pred:"medicalRegistrationNumber")
    typeOfAnaesthesia: [String] @search(by:[term]) @dgraph(pred:"typeOfAnaesthesia")
    drugs: [String] @search(by:[term]) @dgraph(pred:"drugs")
    airManagement: [String] @search(by:[term]) @dgraph(pred:"airManagement")
    regionalTechniques: [String] @search(by:[term]) @dgraph(pred:"regionalTechniques")
    interventionalProcedures: [String] @search(by:[term]) @dgraph(pred:"interventionalProcedures")
    monitoring: [String] @search(by:[term]) @dgraph(pred:"monitoring")
    complications: [String] @search(by:[term]) @dgraph(pred:"complications")
    outcome: String @search(by:[term]) @dgraph(pred:"outcome")
    caseType : String @dgraph(pred:"caseType")
    remarks: String @dgraph(pred:"remarks")
}

type AnaesthesiaChronicPainLog  {
    id: ID!
    createdOn: DateTime @search @dgraph(pred:"createdOn")
    updatedOn: DateTime @search @dgraph(pred:"updatedOn")
    date: DateTime @search @dgraph(pred:"date")
    rotation: String @search(by:[term]) @dgraph(pred:"rotation")
    hospital: String @search(by:[term]) @dgraph(pred:"hospital")
    faculty: String @dgraph(pred:"faculty")
    complete: Boolean @dgraph(pred:"complete")
    patientAge: String @dgraph(pred:"patientAge")
    patientSex: String @dgraph(pred:"patientSex")
    diagnosis: String @dgraph(pred:"diagnosis")
    indication: String @dgraph(pred:"indication")
    conduct: String @dgraph(pred:"conduct")
    technique : [String] @dgraph(pred:"technique")
    method : [String] @dgraph(pred:"method")
    drugsUsed : [String] @dgraph(pred:"drugsUsed")
    intervention: [String] @search(by:[term])@dgraph(pred:"intervention")
    caseType : String @dgraph(pred:"caseType")
    remarks: String @dgraph(pred:"remarks")
}

type AnaesthesiaCriticalCareCaseLog  {
    id: ID!
    createdOn: DateTime @search @dgraph(pred:"createdOn")
    updatedOn: DateTime @search @dgraph(pred:"updatedOn")
    date: DateTime @search @dgraph(pred:"date")
    rotation: String @search(by:[term]) @dgraph(pred:"rotation")
    hospital: String @search(by:[term]) @dgraph(pred:"hospital")
    faculty: String @dgraph(pred:"faculty")
    complete: Boolean @dgraph(pred:"complete")
    patientAge: String @dgraph(pred:"patientAge")
    patientSex: String @dgraph(pred:"patientSex")
    diagnosis: String @dgraph(pred:"diagnosis")
    comorbidites: String @dgraph(pred:"comorbidites")   
    surgicalprocedure : String @dgraph(pred:"surgicalprocedure")
    complication : String @dgraph(pred:"complication")
    outcome: String @search(by:[term]) @dgraph(pred:"outcome")
    conduct: String @dgraph(pred:"conduct")
    procedures : [String] @dgraph(pred:"procedures")
    caseType : String @dgraph(pred:"caseType")
    remarks: String @dgraph(pred:"remarks")
}

type OrthodonticsClinicalCaseLog  {
    id: ID!
    createdOn: DateTime @search @dgraph(pred:"createdOn")
    updatedOn: DateTime @search @dgraph(pred:"updatedOn")
    date: DateTime @search @dgraph(pred:"date")
    complete: Boolean @dgraph(pred:"complete")
    patientAge: String @dgraph(pred:"patientAge")
    patientSex: String @dgraph(pred:"patientSex")
    hospital: String @search(by:[term]) @dgraph(pred:"hospital")
    rotation: String @search(by:[term]) @dgraph(pred:"rotation")
    faculty: String @dgraph(pred:"faculty")
    diagnosis: String @search(by:[term]) @dgraph(pred:"diagnosis")
    techniqueUsed: String @search(by:[term]) @dgraph(pred:"techniqueUsed")
    conduct: String @dgraph(pred:"conduct")
    applianceUsed: [String] @search(by:[term]) @dgraph(pred:"applianceUsed")
    treatmentPlan: [String] @search(by:[term]) @dgraph(pred:"treatmentPlan")
    outcome: String @dgraph(pred:"outcome")
    caseType : String @dgraph(pred:"caseType")
    remarks: String @dgraph(pred:"remarks")
}

type OrthodonticsPreClinical  {
    id: ID!
    createdOn: DateTime @search @dgraph(pred:"createdOn")
    updatedOn: DateTime @search @dgraph(pred:"updatedOn")
    date: DateTime @search @dgraph(pred:"date")
    hospital: String @search(by:[term]) @dgraph(pred:"hospital")
    rotation: String @search(by:[term]) @dgraph(pred:"rotation")
    faculty: String @dgraph(pred:"faculty")
    complete: Boolean @dgraph(pred:"complete")
    conduct: String @dgraph(pred:"conduct")
    wireBendingRecord : [String] @search(by:[term]) @dgraph(pred:"wireBendingRecord")
    roundWireLoopRecord: [String] @search(by:[term]) @dgraph(pred:"roundWireLoopRecord")
    loopInEdgewiseWireRecord: [String] @dgraph(pred:"loopInEdgewiseWireRecord")
    solderingExerciseRecord: [String] @search(by:[term]) @dgraph(pred:"solderingExerciseRecord")
    cephalometricTracingRecord: [String] @search(by:[term]) @dgraph(pred:"cephalometricTracingRecord")
    claspRecord: [String] @search(by:[term]) @dgraph(pred:"claspRecord")
    springsRecord : [String] @dgraph(pred:"springsRecord")
    canineRetractorsRecord : [String] @dgraph(pred:"canineRetractorsRecord")
    bowsRecord : [String] @dgraph(pred:"bowsRecord")
    caseType : String @dgraph(pred:"caseType")
    remarks: String @dgraph(pred:"remarks")
}

type OrthopaedicsCaseLog  {
    id: ID!
    createdOn: DateTime @search @dgraph(pred:"createdOn")
    updatedOn: DateTime @search @dgraph(pred:"updatedOn")
    date: DateTime @search @dgraph(pred:"date")
    hospital: String @search(by:[term]) @dgraph(pred:"hospital")
    faculty: String @dgraph(pred:"faculty")
    complete: Boolean @dgraph(pred:"complete")
    patientAge: String @dgraph(pred:"patientAge")
    patientSex: String @dgraph(pred:"patientSex")
    rotation: String @search(by:[term]) @dgraph(pred:"rotation")
    diseaseCategory: [String] @search(by:[term]) @dgraph(pred:"diseaseCategory")
    conduct: String @dgraph(pred:"conduct")
    site: [String] @search(by:[term]) @dgraph(pred:"site")
    joint: [String] @search(by:[term]) @dgraph(pred:"joint")
    bones: [String] @search(by:[term]) @dgraph(pred:"bones")
    outcomes: [String] @search(by:[term]) @dgraph(pred:"outcomes")
    diagnosis: String @search(by:[term]) @dgraph(pred:"diagnosis")
    caseType : String @dgraph(pred:"caseType")
    remarks: String @dgraph(pred:"remarks")
}

type OrthopaedicsProcedureLog  {
    id: ID!
    createdOn: DateTime @search @dgraph(pred:"createdOn")
    updatedOn: DateTime @search @dgraph(pred:"updatedOn")
    date: DateTime @search @dgraph(pred:"date")
    hospital: String @search(by:[term]) @dgraph(pred:"hospital")
    faculty: String @dgraph(pred:"faculty")
    complete: Boolean @dgraph(pred:"complete")
    patientAge: String @dgraph(pred:"patientAge")
    patientSex: String @dgraph(pred:"patientSex")
    rotation: String @search(by:[term]) @dgraph(pred:"rotation")
    conduct: String @dgraph(pred:"conduct")
    sites: String @search(by:[term]) @dgraph(pred:"sites")
    procedure: [String] @search(by:[term]) @dgraph(pred:"procedure")
    procedureName: String @search(by:[term]) @dgraph(pred:"procedureName")
    durationOfSurgeryHours: String @search(by:[term]) @dgraph(pred:"durationOfSurgeryHours")
    durationOfSurgeryMinutes: String @search(by:[term]) @dgraph(pred:"durationOfSurgeryMinutes")
    outcome: String @search(by:[term]) @dgraph(pred:"outcome")
    outcomeOther: String @search(by:[term]) @dgraph(pred:"outcomeOther")
    complication: String @search(by:[term]) @dgraph(pred:"complication")
    diagnosis: String @search(by:[term]) @dgraph(pred:"diagnosis")
    caseType : String @dgraph(pred:"caseType")
    remarks: String @dgraph(pred:"remarks")
}

type OralMedicineAndRadiologyCaseLog  {
    id: ID!
    createdOn: DateTime @search @dgraph(pred:"createdOn")
    updatedOn: DateTime @search @dgraph(pred:"updatedOn")
    date: DateTime @search @dgraph(pred:"date")
    hospital: String @search(by:[term]) @dgraph(pred:"hospital")
    faculty: String @dgraph(pred:"faculty")
    complete: Boolean @dgraph(pred:"complete")
    patientAge: String @dgraph(pred:"patientAge")
    patientSex: String @dgraph(pred:"patientSex")
    rotation: String @search(by:[term]) @dgraph(pred:"rotation")
    procedure: [String] @search(by:[term]) @dgraph(pred:"procedure")
    comorbidities: [String] @search(by:[term]) @dgraph(pred:"comorbidities")
    lesion: [String] @search(by:[term]) @dgraph(pred:"lesion")
    drugAllergyReaction: [String] @search(by:[term]) @dgraph(pred:"drugAllergyReaction")
    habitHistory: [String] @search(by:[term]) @dgraph(pred:"habitHistory")
    treatment: String @search(by:[term]) @dgraph(pred:"treatment")
    diagnosis: String @search(by:[term]) @dgraph(pred:"diagnosis")
    caseType : String @dgraph(pred:"caseType")
    remarks: String @dgraph(pred:"remarks")
}

type OralRadiology  {
    id: ID!
    createdOn: DateTime @search @dgraph(pred:"createdOn")
    updatedOn: DateTime @search @dgraph(pred:"updatedOn")
    date: DateTime @search @dgraph(pred:"date")
    hospital: String @search(by:[term]) @dgraph(pred:"hospital")
    faculty: String @dgraph(pred:"faculty")
    complete: Boolean @dgraph(pred:"complete")
    patientAge: String @dgraph(pred:"patientAge")
    patientSex: String @dgraph(pred:"patientSex")
    rotation: String @search(by:[term]) @dgraph(pred:"rotation")
    procedure: [String] @search(by:[term]) @dgraph(pred:"procedure")
    report: String @search(by:[term]) @dgraph(pred:"report")
    diagnosis: String @search(by:[term]) @dgraph(pred:"diagnosis")
    chiefComplaint: String @search(by:[term]) @dgraph(pred:"chiefComplaint")
    caseType : String @dgraph(pred:"caseType")
    remarks: String @dgraph(pred:"remarks")
}

type AcademicLog  {
    id: ID!
    createdOn: DateTime @search @dgraph(pred:"createdOn")
    updatedOn: DateTime @search @dgraph(pred:"updatedOn")
    date: DateTime @search @dgraph(pred:"date")
    position : String @dgraph(pred:"position")
    activities : [String] @dgraph(pred:"activities")
    title : String @dgraph(pred:"title")
    organiser : String @dgraph(pred:"organiser")
    supervision : [String] @dgraph(pred:"supervision")
    academicLogType : String @dgraph(pred:"academicLogType")
}

type PublicationLog  {
    id: ID!
    createdOn: DateTime @search @dgraph(pred:"createdOn")
    updatedOn: DateTime @search @dgraph(pred:"updatedOn")
    date: DateTime @search @dgraph(pred:"date")
    publicationType : String @dgraph(pred:"publicationType") 
    title : String @dgraph(pred:"title")
    journalName : String @dgraph(pred:"journalName")
    status : String @dgraph(pred:"status")
    academicLogType : String @dgraph(pred:"academicLogType")
}

type AdminWorkLog  {
    id: ID!
    createdOn: DateTime @search @dgraph(pred:"createdOn")
    updatedOn: DateTime @search @dgraph(pred:"updatedOn")
    date: DateTime @search @dgraph(pred:"date")
    activity : String @dgraph(pred:"activity")
    otherActivity: String @dgraph(pred:"otherActivity")
    position : String @dgraph(pred:"position") 
    organisation : String @dgraph(pred:"organisation")
    academicLogType : String @dgraph(pred:"academicLogType")
}

type LogProfile{
    id: ID!
    createdOn: DateTime @search @dgraph(pred:"createdOn")
    updatedOn: DateTime @search @dgraph(pred:"updatedOn")
    hospitals: [Hospitals] @dgraph(pred:"hospitals")
    faculties : [Faculty] @dgraph(pred:"faculties")
    rotations : [Rotation] @dgraph(pred:"rotations")
}

type Hospitals{
    id: ID!
    createdOn: DateTime @search @dgraph(pred:"createdOn")
    updatedOn: DateTime @search @dgraph(pred:"updatedOn")
    name: String @search @dgraph(pred:"name")
}

type Faculty{
    id: ID!
    createdOn: DateTime @search @dgraph(pred:"createdOn")
    updatedOn: DateTime @search @dgraph(pred:"updatedOn")
    firstName: String @search @dgraph(pred:"firstName")
    lastName: String @search @dgraph(pred:"lastName")
    name: String @search @dgraph(pred:"name")
    designation: String @search @dgraph(pred:"designation")
    otherDesignation: String @search @dgraph(pred:"otherDesignation")
    phoneNumber: String @search @dgraph(pred:"phoneNumber")
}

type Rotation{
    id: ID!
    createdOn: DateTime @search @dgraph(pred:"createdOn")
    updatedOn: DateTime @search @dgraph(pred:"updatedOn")
    department: String @search @dgraph(pred:"department")
    from: DateTime @search @dgraph(pred:"from")
    to: DateTime @search @dgraph(pred:"to")
}